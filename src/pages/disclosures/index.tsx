/* eslint-disable @next/next/no-img-element */
import { type NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useState } from 'react';
import { useSession } from 'next-auth/react';
import { disclosure } from '~/shared/finding';
import moment from 'moment';
import { api } from '~/utils/api';
import { useAtom } from 'jotai';
import { atomSearch } from '~/shared/atoms';
import { createCompareFn } from '~/shared/helpers';
import { FindingsDetailBlock } from '~/components/findings/findings-detail-block';
import { SeverityLabel } from '~/components/findings/severity-label';
import { ScanInformationBlock } from '~/components/findings/scan-info-block';
function createFilterFn<T extends disclosure>(query: string) {
  const filterFn = (d: disclosure) => {
    const lowerQuery = query.toLowerCase();
    return (d.status.toString().toLowerCase() ?? 'not started').includes(
      lowerQuery
    );
  };
  return filterFn;
}

const Home: NextPage = () => {
  const [expanded, setExpanded] = useState('');
  const [search] = useAtom(atomSearch);
  const { data: disclosures, status: queryStatus } =
    api.disclosures.getDisclosures.useQuery();

  return (
    <>
      <Head>
        <title>Disclosures</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container flex flex-col items-center justify-center gap-12 px-2 py-16 ">
        <div className="flex h-full w-full flex-col text-white">
          <table className="table-auto">
            <thead className="borderb border-collapse border-gray-600 bg-white/10">
              <tr className="border border-gray-600">
                <th className="border border-gray-600">Finding</th>
                <th className="border border-gray-600">Status</th>
                <th className="border border-gray-600">Hosts</th>

                <th className="border border-gray-600">Severity</th>
                <th className="border border-gray-600">Date</th>
              </tr>
            </thead>
            <tbody>
              {disclosures &&
                disclosures
                  .sort(createCompareFn('status', 'desc'))
                  .filter(createFilterFn(search))
                  .map((d) => (
                    <>
                      <tr
                        onClick={() => {
                          setExpanded(d.id);
                        }}
                        className="every_two_rows hover:cursor-pointer hover:bg-white/20"
                        key={d.id}
                      >
                        <td className="border border-y-0 border-l-0 border-gray-700  ">
                          {d.name}
                        </td>
                        <td className="border  border-y-0 border-l-0 border-gray-700  px-1 text-center  ">
                          {d.status}
                        </td>
                        <td className="border border-y-0 border-l-0 border-gray-700 px-1">
                          <ul>
                            {d.hosts &&
                              d.hosts.map((h) => <li key={h}>{h}</li>)}
                          </ul>
                        </td>
                        <td className="border border-y-0 border-l-0 border-gray-700 px-1">
                          <SeverityLabel
                            sval={d.findingInfo?.severity}
                          ></SeverityLabel>
                        </td>
                        <td className="border border-y-0 border-l-0 border-gray-700 px-1">
                          {moment(d.timestamp).format('MM/DD/YY')}
                        </td>
                      </tr>
                      <tr className="every_two_rows mt-4 border-x-2 border-y-2 border-gray-400">
                        <td colSpan={5} className="" hidden={d.id !== expanded}>
                          <div className="flex flex-row ">
                            <div className="w-24 shrink">
                              <button
                                className="align-center m-2 w-10 rotate-180 justify-center rounded bg-indigo-400 p-2 hover:bg-indigo-300"
                                onClick={() => {
                                  setExpanded('');
                                }}
                              >
                                <img
                                  alt="expand finding"
                                  src="expand.svg"
                                ></img>
                              </button>
                            </div>
                            <div className=" flex grow basis-1/2 flex-col justify-start py-4">
                              <SeverityLabel
                                sval={d.findingInfo?.severity}
                              ></SeverityLabel>
                              <p className=" my-2 justify-start  border-b-2 border-slate-400 text-xl">
                                {d.name}
                              </p>

                              <p>{d.findingInfo?.description}</p>
                              <div className="my-4">
                                <p>References</p>
                                <ul className="ml-10">
                                  {d &&
                                    d.findingInfo?.references &&
                                    d.findingInfo?.references.map((ref) => (
                                      <li className=" list-disc" key={ref}>
                                        <a
                                          className="text-slate-400  hover:underline"
                                          href={ref}
                                        >
                                          {ref}
                                        </a>
                                      </li>
                                    ))}
                                </ul>
                              </div>
                            </div>
                            <div className="flex grow basis-1/2 flex-col  py-4 pl-4"></div>
                          </div>
                        </td>
                      </tr>
                    </>
                  ))}
            </tbody>
          </table>
        </div>

        {queryStatus && queryStatus == 'loading' && (
          <button
            type="button"
            className="inline-flex cursor-not-allowed items-center rounded-md  bg-indigo-400 px-4 py-2 text-sm font-semibold leading-6 text-white shadow transition duration-150 ease-in-out"
            disabled
          >
            <svg
              className="-ml-1 mr-3 h-5 w-5 animate-spin text-white"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
            >
              <circle
                className="opacity-25"
                cx="12"
                cy="12"
                r="10"
                stroke="currentColor"
                stroke-width="4"
              ></circle>
              <path
                className="opacity-75"
                fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              ></path>
            </svg>
            Loading...
          </button>
        )}
        {queryStatus &&
          queryStatus != 'loading' &&
          disclosures &&
          disclosures.length == 0 && (
            <div className="flex flex-col items-center gap-2">
              <div className="flex flex-col items-center justify-center gap-4">
                <p className="text-center text-2xl text-white">
                  No disclosures found, create one from the findings page,
                  <Link
                    className="ml-1 text-slate-400  hover:underline"
                    href="/disclosures/new"
                  >
                    or click here to create from scratch!
                  </Link>
                  !
                </p>
              </div>
            </div>
          )}
      </div>
    </>
  );
};

export default Home;
